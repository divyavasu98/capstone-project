{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/chequebook-request/chequebook-request.component.ts","./src/app/chequebook-request/chequebook-request.component.html","./src/app/deposit-funds/deposit-funds.component.ts","./src/app/deposit-funds/deposit-funds.component.html","./src/app/homepage/homepage.component.ts","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/app/navbar/navbar.component.ts","./src/app/navbar/navbar.component.html","./src/app/primary-account/primary-account.component.ts","./src/app/primary-account/primary-account.component.html","./src/app/registration/registration.component.ts","./src/app/registration/registration.component.html","./src/app/registration/subComponents/address-details/address-details.component.ts","./src/app/registration/subComponents/address-details/address-details.component.html","./src/app/registration/subComponents/contact-details/contact-details.component.ts","./src/app/registration/subComponents/contact-details/contact-details.component.html","./src/app/registration/subComponents/kyc-details/kyc-details.component.ts","./src/app/registration/subComponents/kyc-details/kyc-details.component.html","./src/app/registration/subComponents/personal-details/personal-details.component.ts","./src/app/registration/subComponents/personal-details/personal-details.component.html","./src/app/registration/subComponents/user-registration/user-registration.component.ts","./src/app/registration/subComponents/user-registration/user-registration.component.html","./src/app/saving-account/saving-account.component.ts","./src/app/saving-account/saving-account.component.html","./src/app/service/route-guard.service.ts","./src/app/service/user-services.service.ts","./src/app/transfer-funds/transfer-funds.component.ts","./src/app/transfer-funds/transfer-funds.component.html","./src/app/user-home/user-home.component.ts","./src/app/user-home/user-home.component.html","./src/app/user-profile/user-profile.component.ts","./src/app/user-profile/user-profile.component.html","./src/app/withdraw-fund/withdraw-fund.component.ts","./src/app/withdraw-fund/withdraw-fund.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ContactDetailsComponent } from './registration/subComponents/contact-details/contact-details.component';\nimport { LoginComponent } from './login/login.component';\nimport { PersonalDetailsComponent } from './registration/subComponents/personal-details/personal-details.component';\nimport { KycDetailsComponent } from './registration/subComponents/kyc-details/kyc-details.component';\nimport { AddressDetailsComponent } from './registration/subComponents/address-details/address-details.component';\nimport { UserRegistrationComponent } from './registration/subComponents/user-registration/user-registration.component';\nimport {RegistrationComponent} from './registration/registration.component';\nimport {UserHomeComponent} from \"./user-home/user-home.component\"\nimport { ChequebookRequestComponent } from './chequebook-request/chequebook-request.component';\nimport { TransferFundsComponent } from './transfer-funds/transfer-funds.component';\nimport { UserProfileComponent } from './user-profile/user-profile.component';\nimport { DepositFundsComponent } from './deposit-funds/deposit-funds.component';\nimport { WithdrawFundComponent } from './withdraw-fund/withdraw-fund.component';\nimport {RouteGuardService} from './service/route-guard.service'\nimport { PrimaryAccountComponent } from './primary-account/primary-account.component';\nimport { SavingAccountComponent } from './saving-account/saving-account.component';\n\nconst routes: Routes = [\n  {path:\"register/contactDetails\",component:ContactDetailsComponent},\n  {path:\"register/personalDetails\",component:PersonalDetailsComponent},\n  {path:\"register/kycDetails\",component:KycDetailsComponent},\n  {path:\"register/addressDetails\",component:AddressDetailsComponent},\n  {path:\"register/userRegistration\",component:UserRegistrationComponent},\n  {path:\"login\",component:LoginComponent},\n  {path:\"register\",component:RegistrationComponent },\n  {path:\"user/home\",component:UserHomeComponent,canActivate:[RouteGuardService]},\n  {path:\"user/chequeBookRequest\",component:ChequebookRequestComponent,canActivate:[RouteGuardService]},\n  {path:\"user/transferFundRequest\",component:TransferFundsComponent,canActivate:[RouteGuardService]},\n  {path:\"user/profile\",component:UserProfileComponent,canActivate:[RouteGuardService]},\n  {path:\"user/depositFund\",component:DepositFundsComponent,canActivate:[RouteGuardService]},\n  {path:\"user/withdrawFund\",component:WithdrawFundComponent,canActivate:[RouteGuardService]},\n  {path:\"user/primaryAccount\",component:PrimaryAccountComponent,canActivate:[RouteGuardService]},\n  {path:\"user/savingAccount\",component:SavingAccountComponent,canActivate:[RouteGuardService]},\n  {path:\"\",component:LoginComponent},\n\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'ICIN-frontend';\n}\n","<html>\n  <body>\n  <app-navbar> </app-navbar>\n   <div>\n    <router-outlet> \n      \n    </router-outlet>\n    \n   </div>\n    \n  </body>\n</html>\n\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms'\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { LoginComponent } from './login/login.component';\nimport { RegistrationComponent } from './registration/registration.component';\nimport { PersonalDetailsComponent } from './registration/subComponents/personal-details/personal-details.component';\nimport { ContactDetailsComponent } from './registration/subComponents/contact-details/contact-details.component';\nimport { KycDetailsComponent } from './registration/subComponents/kyc-details/kyc-details.component';\nimport { AddressDetailsComponent } from './registration/subComponents/address-details/address-details.component';\nimport { UserRegistrationComponent } from './registration/subComponents/user-registration/user-registration.component';\nimport { HomepageComponent } from './homepage/homepage.component';\nimport { NavbarComponent } from './navbar/navbar.component';\nimport { UserHomeComponent } from './user-home/user-home.component';\nimport { ChequebookRequestComponent } from './chequebook-request/chequebook-request.component';\nimport { TransferFundsComponent } from './transfer-funds/transfer-funds.component';\nimport { UserProfileComponent } from './user-profile/user-profile.component';\nimport {HttpClientModule}  from '@angular/common/http';\nimport { DepositFundsComponent } from './deposit-funds/deposit-funds.component';\nimport { WithdrawFundComponent } from './withdraw-fund/withdraw-fund.component';\nimport { PrimaryAccountComponent } from './primary-account/primary-account.component';\nimport { SavingAccountComponent } from './saving-account/saving-account.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    RegistrationComponent,\n    PersonalDetailsComponent,\n    ContactDetailsComponent,\n    KycDetailsComponent,\n    AddressDetailsComponent,\n    UserRegistrationComponent,\n    HomepageComponent,\n    NavbarComponent,\n    UserHomeComponent,\n    ChequebookRequestComponent,\n    TransferFundsComponent,\n    UserProfileComponent,\n    DepositFundsComponent,\n    WithdrawFundComponent,\n    PrimaryAccountComponent,\n    SavingAccountComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n    \n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport {FormBuilder,FormGroup,FormControl, Validators} from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { ValueConverter } from '@angular/compiler/src/render3/view/template';\nimport { visitValue } from '@angular/compiler/src/util';\nimport { User } from '../registration/subComponents/user-registration/user-registration.component';\nimport { UserServicesService } from '../service/user-services.service';\n\nexport class ChequeBook {\n  constructor(private accepted:boolean,private user:User){}\n}\n@Component({\n  selector: 'app-chequebook-request',\n  templateUrl: './chequebook-request.component.html',\n  styleUrls: ['./chequebook-request.component.css']\n})\nexport class ChequebookRequestComponent implements OnInit {\n\n  constructor(private route:Router,\n    private formbuilder:FormBuilder,\n    private service:UserServicesService) { }\n  chequeBookRequestForm:FormGroup;  \n  account= this.getAccountPassedByParent();\n  ngOnInit(): void {\n    this.chequeBookRequestForm = this.formbuilder.group({\n      accountType:[this.account,[Validators.required]]\n    })\n  }\n\n  getAccountPassedByParent(){\n    return  history.state.data;\n  }\n\n  get f(){\n    return this.chequeBookRequestForm.controls;\n  }\n  handleChequebookRequest(){\n    let userObj = JSON.parse(sessionStorage.getItem(\"userObj\"));\n    this.service.requestChequeBook(new ChequeBook(false,userObj),userObj).subscribe(\n      response =>{ \n        alert(\"Chequebook request submiited\")\n        console.log(response\n          )\n          this.route.navigate([\"user\",\"home\"]);\n        },\n      error => { \n        alert(\"Chequebook request failed\")\n        console.log(error)},\n    )\n  }\n\n\n  \n\n}\n","<div class=\"jumbotron bg-light text-dark p-10\">\n    <form [formGroup]=\"chequeBookRequestForm\"> \n    <div class=\"form-group\">\n      <label for=\"accountType\">Please select your account type</label>\n      <select class=\"form-control\" id=\"accountType\" name=\"accountType\" formControlName=\"accountType\">\n        <option>Primary Account</option>\n        <option>Saving Account</option>\n      </select>\n    </div>\n    <div class=\"form-group\">\n      <label for=\"Description\">Description</label>\n      <textarea class=\"form-control\" id=\"description\" rows=\"2\"></textarea>\n    </div>\n    <button type=\"submit\" class=\"btn btn-primary\" (click)=\"handleChequebookRequest()\">Submit Request</button>\n  </form>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { UserServicesService } from '../service/user-services.service';\n\nexport class Deposit {\n  constructor(private accType:String,private accNo:String,private amount){}\n}\n@Component({\n  selector: 'app-deposit-funds',\n  templateUrl: './deposit-funds.component.html',\n  styleUrls: ['./deposit-funds.component.css']\n})\nexport class DepositFundsComponent implements OnInit {\n\n \n  constructor(private route:Router,private formBuilder:FormBuilder,private service:UserServicesService) { }\n  account:String;\n  balanceFund:number;\n  depositFundForm: FormGroup;\n  submitted:boolean = false;\n  ngOnInit(): void {\n    this.depositFundForm = this.formBuilder.group({\n      accountType: [\"Primary Account\"],\n      balance : [this.balanceFund],\n      amountToBeDeposited : [\"\",Validators.required]\n\n    })\n    this.getBalanceAsPerAccountType(this.depositFundForm.get(\"accountType\").value);\n  }\n\n  getBalanceAsPerAccountType(accountType){\n    if(accountType===\"Primary Account\")\n      this.getBalance(sessionStorage.getItem(\"primaryAccountNumber\"));\n    else\n      this.balanceFund = Number(sessionStorage.getItem(\"savingAccountBalance\"))\n  }\n\n  get f(){\n    return this.depositFundForm.controls;\n  }\n\n  getBalance(account){\n    this.service.getAccountBalance(Number(account)).subscribe(\n      response => {\n        this.balanceFund = Number(response);\n      },\n      error =>{\n        console.log(error);\n      }\n    )\n  }\n\n  handleTransferFund(){\n    this.submitted = true;\n    if(this.depositFundForm.invalid){\n      console.log(\"Invalid\")\n    }\n    else{\n    if(this.depositFundForm.get(\"accountType\").value === \"Primary Account\"){\n    this.service.depositMoney(\"Primary\",Number(sessionStorage.getItem(\"primaryAccountNumber\")),Number(this.depositFundForm.get(\"amountToBeDeposited\").value)).subscribe(\n      response =>{ \n        console.log(response)\n        alert(\"Money deposited successfully!!\")\n        this.route.navigate([\"user\",\"home\"]);\n        },\n      error => {\n        alert(\"Transaction Failed\")\n        console.log(error)\n      }\n    )\n    }\n    else{\n      this.service.depositMoney(\"Savings\",Number(sessionStorage.getItem(\"savingAccountNumber\")),Number(this.depositFundForm.get(\"amountToBeDeposited\").value)).subscribe(\n        response =>{ \n          console.log(response)\n          let updatedBalance = Number(this.depositFundForm.get(\"amountToBeDeposited\").value) + Number(sessionStorage.getItem(\"savingAccountBalance\"))\n          sessionStorage.setItem(\"savingAccountBalance\",String(updatedBalance));\n          alert(\"Money deposited successfully!!\")\n          this.route.navigate([\"user\",\"home\"]);\n          },\n        error => {\n          alert(\"Transaction Failed\")\n          console.log(error)\n        }\n      )\n    }\n  }\n}\n\n  public onChange(event): void {  // event will give you full breif of action\n    const newVal = event.target.value;\n    this.getBalanceAsPerAccountType(newVal);\n   // console.log(newVal);\n  }\n\n\n}\n","<div class=\"jumbotron bg-light text-dark p-10\">\n    <form [formGroup]=\"depositFundForm\"> \n    <div class=\"form-group\">\n      <label for=\"accountType\">Account type</label>\n      <select class=\"form-control\" id=\"accountType\" name=\"accountType\" formControlName=\"accountType\" (change)=\"onChange($event)\">\n        <option>Primary Account</option>\n        <option>Saving Account</option>\n      </select>\n    </div>\n    <div class=\"form-group\">\n        <label for=\"accountBalance\">Balance</label>\n        <input type=\"text\" class=\"form-control\" readonly id=\"accountBalance\" placeholder formControlName=\"balance\" value=\"{{balanceFund}}\">\n    </div>\n      <div class=\"form-group\">\n        <label for=\"amountToBeDeposited\">Amount to be deposited</label>\n        <input type=\"number\" class=\"form-control\"  id=\"amountToBeDeposited\" formControlName=\"amountToBeDeposited\" \n        [ngClass]=\"{'is-invalid':submitted && f.amountToBeDeposited.errors}\">\n        <div *ngIf=\"f.amountToBeDeposited.errors\" class=\"invalid-feedback\">\n            <div *ngIf=\"f.amountToBeDeposited.errors.required\">\n                <p class=\"alert alert-warning mt-2\">Amount is required</p>\n            </div>\n        </div>\n      </div>\n    \n    <button type=\"button\" class=\"btn btn-primary\" (click)=\"handleTransferFund()\" id=\"depositMoneyButton\">Deposit Money</button>\n  </form>\n</div>\n\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-homepage',\n  templateUrl: './homepage.component.html',\n  styleUrls: ['./homepage.component.css']\n})\nexport class HomepageComponent implements OnInit {\n\n  constructor(private router : Router) { }\n\n  ngOnInit(): void {\n\n  }\n\n  redirectToRegister(){\n    this.router.navigate([\"register\",\"personalDetails\"]);\n  }\n\n\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport {FormsModule,FormGroup,FormBuilder,FormControl, Validators} from '@angular/forms';\nimport { Router } from '@angular/router';\nimport {UserServicesService} from '../service/user-services.service'\nimport {User} from  '../registration/subComponents/user-registration/user-registration.component';\n\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  constructor(private router:Router,private formbuilder:FormBuilder,private service:UserServicesService) { }\n  submitted =false\n  loginForm : FormGroup;\n  ngOnInit(): void {\n    this.loginForm = this.formbuilder.group({\n      email : [\"\",[Validators.required,Validators.email]],\n      password: [\"\",Validators.required],\n    })\n  }\n\n  validateLogin(){\n    this.submitted = true;\n   //  console.log(this.loginForm.get(\"username\").value);\n   \n    if(!this.loginForm.invalid){\n      let newUser = new User(\"\",\"\",this.loginForm.get(\"email\").value,null,\"\",this.loginForm.get(\"password\").value,null,null);\n      this.service.authenticateUser(newUser).subscribe(\n        response => {\n          console.log(response),\n          sessionStorage.removeItem(\"password\");\n          sessionStorage.setItem(\"isAuthenticatedUser\",response[\"fullname\"]);\n          sessionStorage.setItem(\"mailid\",response[\"mailid\"]);\n          sessionStorage.setItem(\"phonenumber\",response[\"phonenumber\"]);\n          sessionStorage.setItem(\"firstname\",response[\"fullname\"]);\n          sessionStorage.setItem(\"lastname\",response[\"surname\"]);\n          sessionStorage.setItem(\"address\",response[\"address\"]);\n          sessionStorage.setItem(\"primaryAccountNumber\",response[\"primaryAccount\"][\"accountNumber\"]);\n          sessionStorage.setItem(\"primaryAccountBalance\",response[\"primaryAccount\"][\"accountBalance\"]);\n          sessionStorage.setItem(\"savingAccountNumber\",response[\"savingsAccount\"][\"accountNumber\"]);\n          sessionStorage.setItem(\"savingAccountBalance\",response[\"savingsAccount\"][\"accountBalance\"]);\n          sessionStorage.setItem(\"accountID\",response[\"id\"]);\n          sessionStorage.setItem(\"userObj\",JSON.stringify(response));\n          console.log(\"Json object is \")\n           let u = JSON.parse(sessionStorage.getItem(\"userObj\"));\n           console.log(u);\n          //primaryAccount: {accountNumber: 22113346, accountBalance: 0}\n\n          this.router.navigate([\"user\",\"home\"]);\n        },\n        error => {\n         // alert(\"Invalid Credentials\") \n        alert(\"Login failed!!\")\n      }\n      )\n\n    }\n\n  }\n  get f() { return this.loginForm.controls; }\n  \n}\n","<div class=\"signup-form\">\n    <form [formGroup]=\"loginForm\">\n\t\t<h2>Login</h2>\n\t\t<p>Login with your credentials to start exploring our digital services</p>\n        <hr>\n\t\t<div class=\"form-group\">\n\t\t\t<div class=\"input-group\">\n\t\t\t\t<div class=\"input-group-prepend\">\n\t\t\t\t\t<span class=\"input-group-text\">\n\t\t\t\t\t\t<span class=\"fa fa-user\"></span>\n\t\t\t\t\t</span>                    \n\t\t\t\t</div>\n\t\t\t\t<input type=\"text\" class=\"form-control\" name=\"email\" placeholder=\"Email address\" required=\"required\" formControlName=\"email\" [ngClass]=\"{ 'is-invalid': submitted &&  f.email.errors }\" >\n\t\t\t\t<div *ngIf=\"f.email.errors\" class=\"invalid-feedback\">\n\t\t\t\t\t<div *ngIf=\"f.email.errors.required\">    <p class=\"alert alert-warning mt-2\" >Email is required</p>  </div>\n\t\t\t\t\t<div *ngIf=\"f.email.errors.email\"> <p class=\"alert alert-warning mt-2\" >Email must be a valid email address</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t\n        </div>\n        <div class=\"form-group\">\n\t\t\t<div class=\"input-group\">\n\t\t\t\t<div class=\"input-group-prepend\">\n\t\t\t\t\t<span class=\"input-group-text\">\n\t\t\t\t\t\t<i class=\"fa fa-lock\"></i>\n\t\t\t\t\t</span>                    \n\t\t\t\t</div>\n\t\t\t\t<input type=\"password\" class=\"form-control\" name=\"password\" placeholder=\"Password\" required=\"required\" formControlName=\"password\" [ngClass]=\"{ 'is-invalid': submitted && f.password.errors }\" >\n\t\t\t\t<div *ngIf=\"f.password.errors\" class=\"invalid-feedback\">\n\t\t\t\t\t<div *ngIf=\"f.password.errors.required\">    <p class=\"alert alert-warning mt-2\" >Password is required</p>  </div>\n\t\t\t</div>\n\t\t\t</div>\n        </div>\n        <div class=\"form-group\">\n            <button type=\"button\" id=\"loginButton\" class=\"btn btn-primary btn-lg float-center\" (click)=\"validateLogin()\">Login</button>\n        </div>\n     \n    </form>\n</div>\n\t<div class=\"text-center \">New user? <a href=\"#\" class=\"text-white\" routerLink=\"/register\">Register Now</a></div>\n\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport {UserServicesService}  from '../service/user-services.service';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n\n  view:boolean=true;\n  constructor(private router:Router,\n    public service: UserServicesService) { }\n\n  ngOnInit(): void {\n  \n  }\n\n  isView(){\n    this.view=false;\n  }\n\n  handleChequeBookRequest(account){\n   this.router.navigate([\"user\",\"chequeBookRequest\"],{state:{data:account}}); \n  }\n\n  handleTransferFundRequest(account){\n    this.router.navigate([\"user\",\"transferFundRequest\"],{state:{data:account}}); \n  }\n  handleLogout(){\n    sessionStorage.removeItem(\"isAuthenticatedUser\");\n    sessionStorage.clear();\n    this.router.navigate([\"login\"]);\n  }\n  viewProfile(){\n    this.router.navigate([\"user\",\"profile\"]);\n  }\n\n  handleHome(){\n    if(this.service.isUserLogin()){\n      this.router.navigate([\"user\",\"home\"]);\n    }\n    else{\n      this.router.navigate([\"login\"]);\n    }\n  }\n  handleAccount(account){\n    if(account===\"Primary\")\n        this.router.navigate([\"user\",\"primaryAccount\"])\n    else\n      this.router.navigate([\"user\",\"savingAccount\"])\n  }\n\n}\n","  <nav class=\"navbar navbar-expand-lg navbar-dark bg-success static-top\">\n    <div class=\"container\">\n      <a class=\"navbar-brand\" (click)=\"handleHome()\">\n        <i class=\"fa fa-tree\" aria-hidden=\"true\"></i>\n        ICIN\n      </a>\n      <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarResponsive\" aria-controls=\"navbarResponsive\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n        <span class=\"navbar-toggler-icon\">\n        </span>\n      </button>\n     \n      <div class=\"collapse navbar-collapse\" id=\"navbarResponsive\">\n        <ul class=\"navbar-nav mr-auto text-white\">\n          <li class=\"nav-item  ml-2\" *ngIf=\"service.isUserLogin()\">\n            <a class=\"nav-link\" routerLink=\"user/home\">Home\n              <span class=\"sr-only\">(current)</span>\n            </a>\n          </li>\n        <li class=\"nav-item dropdown\" *ngIf=\"service.isUserLogin()\">\n          <a class=\"nav-link dropdown-toggle ml-2\" href=\"#\" id=\"navbarDropdown\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n            Accounts\n          </a>\n          <div class=\"dropdown-menu bg-light \" aria-labelledby=\"navbarDropdown\">\n            <a class=\"dropdown-item\" (click)=\"handleAccount('Primary')\">Primary</a>\n            <a class=\"dropdown-item\" (click)=\"handleAccount('Saving')\">Saving</a>\n          </div>\n        </li>\n        <li class=\"nav-item \" *ngIf=\"service.isUserLogin()\"  (click)=\"handleTransferFundRequest('Primary Account')\" >\n          <a class=\"nav-link  ml-2\" (click)=\"handleTransferFundRequest('Primary Account')\" id=\"navbarDropdown\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n            Transfer\n          </a>\n        \n        </li>\n        <li class=\"nav-item dropdown\" *ngIf=\"service.isUserLogin()\">\n          <a class=\"nav-link dropdown-toggle ml-2\" href=\"#\" id=\"navbarDropdown\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n            Request\n          </a>\n          <div class=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">\n            <a class=\"dropdown-item\" (click)=\"handleChequeBookRequest('Primary Account')\">Chequebook for Primary Account</a>\n            <a class=\"dropdown-item\" (click)=\"handleChequeBookRequest('Saving Account')\">Chequebook for Saving Account</a>\n          </div>\n        </li>\n      </ul>\n        <ul class=\"navbar-nav ml-auto\">\n          <li class=\"nav-item\" *ngIf=\"!service.isUserLogin()\">\n            <a class=\"nav-link\" routerLink=\"/login\" (click)=\"isView()\">Login</a>\n          </li>\n          <li class=\"nav-item\" *ngIf=\"!service.isUserLogin()\">\n            <a class=\"nav-link\" routerLink=\"/register\" (click)=\"isView()\">Sign Up</a>\n          </li>\n          <li class=\"nav-item dropdown\" *ngIf=\"service.isUserLogin()\">\n            <a class=\"nav-link dropdown-toggle ml-2\" href=\"#\" id=\"navbarDropdown\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n              {{service.getUserName()}}\n            </a>\n            <div class=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">\n              <a class=\"dropdown-item\"(click)=\"viewProfile()\" >View Profile</a>\n              <a class=\"dropdown-item\" (click)=\"handleLogout()\">Logout</a>\n            </div>\n          </li>\n        </ul>\n      </div>\n    </div>\n  </nav>\n<div *ngIf=\"view\">\n  <app-homepage></app-homepage>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { UserServicesService } from '../service/user-services.service';\nimport { Transaction } from '../transfer-funds/transfer-funds.component';\n\n@Component({\n  selector: 'app-primary-account',\n  templateUrl: './primary-account.component.html',\n  styleUrls: ['./primary-account.component.css']\n})\nexport class PrimaryAccountComponent implements OnInit {\n\n  constructor(private service:UserServicesService) { }\n  acocuntNumber = sessionStorage.getItem(\"primaryAccountNumber\");\n  balance=sessionStorage.getItem(\"primaryAccountBalance\");\n  transactions\n  ngOnInit(): void {\n        this.getUserTransactions();      \n    \n  }\n  getUserTransactions(){\n    this.service.getTransactions(sessionStorage.getItem(\"primaryAccountNumber\")).subscribe(\n      response =>{\n        this.transactions = response;\n        console.log(this.transactions);\n      },\n      error => console.log(error)\n      )\n    \n  }\n\n}\n","<div class=\"card account\">\n    <div class=\"card-header\">\n        <h5 class=\"card-title\">Primary Account: {{acocuntNumber}}</h5>\n        <h5 class=\"card-title\">Account Balance: {{balance}} Rs</h5>\n    </div>\n    <div class=\"card-body\">\n      <h5 class=\"card-title\">Recent Transactions</h5>\n      <table class=\"table\">\n        <thead>\n          <tr> \n            <th scope=\"col\">Transaction Id</th>\n            <th scope=\"col\">Description</th>\n            <th scope=\"col\">Benificiary's Account Number</th>\n            <th scope=\"col\">Amount Transferred</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr *ngFor=\"let transaction of transactions\">\n            <th scope=\"row\">{{transaction[\"transactionId\"]}}</th>\n            <td>{{transaction[\"description\"]}}</td>\n            <td>{{transaction[\"destinationAccountnumber\"]}}</td>\n            <td>{{transaction[\"transactionAmount\"]}} Rs</td>\n          </tr>\n          \n        </tbody>\n      </table>\n    </div>\n  </div>\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-registration',\n  templateUrl: './registration.component.html',\n  styleUrls: ['./registration.component.css']\n})\nexport class RegistrationComponent implements OnInit {\n\n  constructor(private router : Router) { }\n\n  ngOnInit(): void {\n\n //   this.router.navigate([\"register\",\"personalDetails\"]);\n  }\n\n}\n","\n<div class=\"signup-form\">\n    <form >\n\t\t<h2>Sign Up</h2>\n\t\t<p>Please fill in this form to create an account!</p>\n        <hr>\n        <router-outlet>\n            <app-personal-details></app-personal-details>\n        </router-outlet>\n        \n     \n    </form>\n</div>\n\t<div class=\"text-center text-dark \">Already have an account? <a href=\"#\" class=\"text-dark\" routerLink=\"/login\">Login here</a></div>\n\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { isSyntheticPropertyOrListener } from '@angular/compiler/src/render3/util';\nimport { TitleCasePipe } from '@angular/common';\n\n@Component({\n  selector: 'app-address-details',\n  templateUrl: './address-details.component.html',\n  styleUrls: ['./address-details.component.css']\n})\nexport class AddressDetailsComponent implements OnInit {\n\n  constructor(private router:Router) { }\n  invalidAddressLine1:boolean=false;\n  invalidAddressLine2:boolean=false;\n  invalidAddressLine3:boolean=false;\n  invalidAddressLine4:boolean=false;\n  invalidAddressLine5:boolean=false;\n\n  addressLine1:string=\"\";\n  addressLine2:string=\"\";\n  addressLine3:string=\"\";\n  addressLine4:string=\"\";\n  addressLine5:string=\"\";\n  fullAddress:string;\n\n  addressArray:String[]\n  invalidAddressArray:boolean[]\n\n  areAllFieldsValid = true;\n\n  ngOnInit(): void {\n  }\n\n  validateAddress(){\n    \n    \n     if(this.addressLine1.length===0){\n       this.invalidAddressLine1 = true;\n     } \n     if(this.addressLine2.length===0){\n       this.invalidAddressLine2 = true;\n     }\n     if(this.addressLine3.length===0){\n       this.invalidAddressLine3 = true;\n     }\n     if(this.addressLine4.length===0){\n       this.invalidAddressLine4 = true;\n     }\n     if(this.addressLine5.length===0){\n       this.invalidAddressLine5 = true;\n     }\n     else{\n      this.fullAddress = this.addressLine1 + \" \" + this.addressLine2  + \" \" + this.addressLine3 + \" \" +this.addressLine4 + \" \" +this.addressLine5;\n      sessionStorage.setItem(\"address\",this.fullAddress);\n      this.router.navigate([\"register\",\"userRegistration\"])\n     }\n    }\n\n}\n","<div class=\"signup-form\">\n    <form >\n\t\t<h2>Sign Up</h2>\n\t\t<p>Please fill in this form to create an account!</p>\n        <hr>\n        <router-outlet>\n\n\n            <div class=\"form-group\">\n                <div class=\"input-group\">\n                    <div class=\"input-group-prepend\">\n                        <span class=\"input-group-text\">\n                            <i class=\"fa fa-building\"></i>\n                        </span>                    \n                    </div>\n                    <input type=\"text\" class=\"form-control\" name=\"addressLine1\" id=\"addressLine1\" placeholder=\"House Number - Building Name\" required=\"required\" [(ngModel)]=\"addressLine1\">\n                </div>\n                <p class=\"alert alert-warning mt-2\" *ngIf=\"invalidAddressLine1\">House Number and building name is required</p>\n\n            </div>\n            <div class=\"form-group\">\n                <div class=\"input-group\">\n                    <div class=\"input-group-prepend\">\n                        <span class=\"input-group-text\">\n                            <i class=\"fa fa-road\" aria-hidden=\"true\"></i>\n                        </span>                    \n                    </div>\n                    <input type=\"text\" class=\"form-control\" name=\"addressLine2\" id=\"addressLine2\" placeholder=\"Street Name or Locality\" required=\"required\" [(ngModel)]=\"addressLine2\">\n                </div>\n                <p class=\"alert alert-warning mt-2\" *ngIf=\"invalidAddressLine2\">Street Name or Locality is required</p>\n            </div>\n            <div class=\"form-group\">\n                <div class=\"input-group\">\n                    <div class=\"input-group-prepend\">\n                        <span class=\"input-group-text\">\n                            <i class=\"fa fa-location-arrow\"></i>\n                        </span>                    \n                    </div>\n                    <input type=\"text\" class=\"form-control\" name=\"addressLine3\" id=\"addressLine3\" placeholder=\"Town or Village Name\" required=\"required\" [(ngModel)]=\"addressLine3\">\n                </div>\n                <p class=\"alert alert-warning mt-2\" *ngIf=\"invalidAddressLine3\">Town or village name is rquired</p>\n\n            </div>\n            <div class=\"form-group\">\n                <div class=\"input-group\">\n                    <div class=\"input-group-prepend\">\n                        <span class=\"input-group-text\">\n                            <i class=\"fa fa-globe\"></i>\n                        </span>                    \n                    </div>\n                    <input type=\"text\" class=\"form-control\" name=\"addressLine4\" id=\"addressLine4\" placeholder=\"City and State Name\" required=\"required\" [(ngModel)]=\"addressLine4\">\n                </div>\n                <p class=\"alert alert-warning mt-2\" *ngIf=\"invalidAddressLine4\">City or state name is rquired</p>\n\n            </div>\n            <div class=\"form-group\">\n                <div class=\"input-group\">\n                    <div class=\"input-group-prepend\">\n                        <span class=\"input-group-text\">\n                        \n                            <i class=\"fa fa-map-marker\"></i>\n                        </span>                    \n                    </div>\n                    <input type=\"number\" class=\"form-control\" name=\"addressLine5\" id=\"addressLine5\" placeholder=Pincode required=\"required\" [(ngModel)]=\"addressLine5\">\n                </div>\n                <p class=\"alert alert-warning mt-2\" *ngIf=\"invalidAddressLine5\">Pincode is rquired</p>\n\n            </div>\n\n            \n            <div class=\"form-group\">\n                <button type=\"button\" class=\"btn btn-primary btn-md m-4 float-right d-block\" id=\"next\" (click)=\"validateAddress()\">Next</button>\n            </div>\n\n            <div class=\"form-group\">\n                <label class=\"form-check-label\"></label>\n            </div>\n            </router-outlet>\n            </form>\n            <div class=\"text-center \">Already have an account? <a href=\"#\" class=\"text-white\" routerLink=\"/login\">Login here</a></div>\n\n\n\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport {FormGroup,FormControl,Validators,FormBuilder, Form}  from \"@angular/forms\"\n\n@Component({\n  selector: 'app-contact-details',\n  templateUrl: './contact-details.component.html',\n  styleUrls: ['./contact-details.component.css']\n})\nexport class ContactDetailsComponent implements OnInit {\n  \n  constructor(private router:Router, private formbuilder:FormBuilder) { }\n  contactForm : FormGroup;\n  submitted = false;\n  ngOnInit(): void {\n    this.contactForm = this.formbuilder.group({\n      email : [\"\",[Validators.required,Validators.email]],\n      phone: [\"\", [Validators.required, Validators.minLength(10),Validators.pattern(/^-?(0|[1-9]\\d*)?$/)]],\n    })\n  \n  }\n\n  validateContactDetails(){\n    \n    if(this.contactForm.valid )\n    {   sessionStorage.setItem(\"phonenumber\",this.contactForm.get(\"phone\").value);\n        sessionStorage.setItem(\"mailid\",this.contactForm.get(\"email\").value);\n        this.router.navigate([\"register\",\"kycDetails\"]);\n     }\n  }\n\n  \n\n  get f() { return this.contactForm.controls; }\n \n\n}\n","\n<div class=\"signup-form\">\n    <form [formGroup]=\"contactForm\"> \n\t\t<h2>Sign Up</h2>\n\t\t<p>Please fill in this form to create an account!</p>\n        <hr>\n        <router-outlet>\n  \n<div class=\"form-group\">\n    <div class=\"input-group\">\n        <div class=\"input-group-prepend\">\n            <span class=\"input-group-text\">\n                <i class=\"fa fa-paper-plane\"></i>\n            </span>                    \n        </div>\n        <input type=\"email\" class=\"form-control\" name=\"email\" placeholder=\"Email Address\" required=\"required\" formControlName=\"email\" [ngClass]=\"{ 'is-invalid':  f.email.errors }\" >\n        <div *ngIf=\"f.email.errors\" class=\"invalid-feedback\">\n            <div *ngIf=\"f.email.errors.required\">    <p class=\"alert alert-warning mt-2\" >Email is required</p>  </div>\n            <div *ngIf=\"f.email.errors.email\"> <p class=\"alert alert-warning mt-2\" >Email must be a valid email address</div>\n        </div>\n\n    </div>\n</div>\n<div class=\"form-group\">\n    <div class=\"input-group\">\n        <div class=\"input-group-prepend\">\n            <span class=\"input-group-text\">\n                <i class=\"fa fa-mobile\" ></i>\n            </span>                    \n        </div>\n        \n        <input type=\"text\" formControlName=\"phone\" name=\"phone\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': f.phone.errors }\"  />\n                        <div *ngIf=\"f.phone.errors\" class=\"invalid-feedback\">\n                            <div *ngIf=\"f.phone.errors.required\"><p class=\"alert alert-warning mt-2\" >Mobile number is required </p></div>\n                            <div *ngIf=\"f.phone.errors.minlength\"> <p class=\"alert alert-warning mt-2\" > Mobile number must be of 10 characters </p></div>\n                            <div *ngIf=\"f.phone.errors.pattern\"> <p class=\"alert alert-warning mt-2\" > Only numbers are allowed</p></div>\n                        </div>\n        \n    </div>\n\n</div>\n  \n<div class=\"form-group\">\n    <button type=\"button\" class=\"btn btn-primary btn-md m-4 float-right d-block\" id=\"next\" (click)=\"validateContactDetails()\">Next</button>\n</div>\n\n<div class=\"form-group\">\n    <label class=\"form-check-label\"></label>\n</div>\n\n</router-outlet>\n\n\n</form>\n<div class=\"text-center \">Already have an account? <a href=\"#\" class=\"text-white\" routerLink=\"/login\">Login here</a></div>\n\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport {FormGroup,FormControl,Validators,FormBuilder, Form}  from \"@angular/forms\"\n\n@Component({\n  selector: 'app-kyc-details',\n  templateUrl: './kyc-details.component.html',\n  styleUrls: ['./kyc-details.component.css']\n})\nexport class KycDetailsComponent implements OnInit {\n\n  constructor(private router:Router,private formbuilder:FormBuilder) { }\n  age:number;\n  kycForm:FormGroup;\n  invalidPan:any;\n  invalidAge = false;\n  ngOnInit(): void {\n    this.kycForm = this.formbuilder.group({\n      pan : [\"\",[Validators.required]],\n      dob : [\"\",[Validators.required]]    \n    })\n  }\n  validateKyc(){\n    console.log(this.kycForm.get(\"dob\").value);\n    let currentDate:any =  new Date(this.kycForm.get(\"dob\").value);\n    let timeDiff =  Math.abs(Date.now() - currentDate)\n    this.age = Math.floor((timeDiff / (1000 * 3600 * 24))/365);\n    console.log(this.age);\n    if(this.age<10){\n      this.invalidAge = true;\n      return;\n    }\n    if(!this.checkPancardValidity(this.kycForm.get(\"pan\").value)){\n      this.invalidPan = true;\n      return;\n    }\n    \n\n    //age =  2020-this.kycForm.get(\"dob\").value;\n    if(!this.kycForm.invalid)\n       this.router.navigate([\"register\",\"addressDetails\"])\n  }\n\n  checkPancardValidity(pan) {\n    let letter = /[a-zA-Z]/; \n    let number = /[0-9]/;\n    let valid = number.test(pan) && letter.test(pan); //match a letter _and_ a number\n    console.log(valid);\n    return valid;\n}\n\n  get f() { return this.kycForm.controls; }\n}\n","<div class=\"signup-form\">\n    <form [formGroup]=\"kycForm\">\n\t\t<h2>Sign Up</h2>\n\t\t<p>Please fill in this form to create an account!</p>\n        <hr>\n        <router-outlet>\n<div class=\"form-group\">\n    <div class=\"input-group\">\n        <div class=\"input-group-prepend\">\n            <span class=\"input-group-text\">\n                <i class=\"fa fa-calendar\"></i>\n            </span>                    \n        </div>\n        <input type=\"text\" class=\"form-control\" name=\"dob\" placeholder=\"Date of birth\" onfocus=\"(this.type='date')\" onblur=\"(this.type='text')\" required=\"required\" formControlName=\"dob\" [ngClass]=\"{ 'is-invalid':  f.dob.errors }\" >\n        <div *ngIf=\"f.dob.errors\" class=\"invalid-feedback\">\n            <div *ngIf=\"f.dob.errors.required\">    <p class=\"alert alert-warning mt-2\" >Date of birth is required</p>  </div>\n        </div>\n    </div>\n    <p class=\"alert alert-warning mt-2\" *ngIf=\"invalidAge\" >User Should be minimum 10 years old </p> \n\n    \n</div>\n<div class=\"form-group\">\n    <div class=\"input-group\">\n        <div class=\"input-group-prepend\">\n            <span class=\"input-group-text\">\n                <i class=\"fa fa-id-card-o\"></i>\n            </span>                    \n        </div>\n        <input type=\"text\" class=\"form-control\" name=\"pancard\" placeholder=\"Pancard Number\" required=\"required\" formControlName=\"pan\" [ngClass]=\"{ 'is-invalid':  f.pan.errors }\" ng-pattern=\"/^[a-zA-Z0-9]+$/\" required >\n        <div *ngIf=\"f.pan.errors\" class=\"invalid-feedback\">\n            <div *ngIf=\"f.pan.errors.required\">    <p class=\"alert alert-warning mt-2\" >Pan card Number is required</p>  </div>\n        </div>\n        <p class=\"alert alert-warning mt-2\" *ngIf=\"invalidPan\" >Pan number must be alpha numeric </p> \n\n       \n    </div>\n</div>\n  \n<div class=\"form-group\">\n    <button type=\"button\" class=\"btn btn-primary btn-md m-4 float-right d-block\" id=\"next\" (click)=\"validateKyc()\">Next</button>\n</div>\n\n<div class=\"form-group\">\n    <label class=\"form-check-label\"></label>\n</div>\n\n</router-outlet>\n</form>\n<div class=\"text-center \">Already have an account? <a href=\"#\" class=\"text-white\" routerLink=\"/login\">Login here</a></div>\n\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-personal-details',\n  templateUrl: './personal-details.component.html',\n  styleUrls: ['./personal-details.component.css']\n})\nexport class PersonalDetailsComponent implements OnInit {\n\n  constructor(private router : Router, ) { }\n  firstName:string;\n  lastName:string;\n  invalidFirstName = false;\n  invalidLasttName = false;\n\n\n  ngOnInit(): void {\n  }\n\n\n  handlePersonalDetailsValidation(){\n    if(this.firstName===undefined){\n      this.invalidFirstName = true;\n    }\n    if(this.lastName===undefined){\n      this.invalidLasttName = true;\n    }\n    else {\n    sessionStorage.setItem(\"firstName\",this.firstName);\n    sessionStorage.setItem(\"lastName\",this.lastName);\n    this.router.navigate([\"register\",\"contactDetails\"]);\n    }\n  }\n\n}\n","        <div class=\"form-group\">\n\t\t\t<div class=\"input-group\">\n\t\t\t\t<div class=\"input-group-prepend\">\n\t\t\t\t\t<span class=\"input-group-text\">\n\t\t\t\t\t\t<span class=\"fa fa-user\"></span>\n\t\t\t\t\t</span>                    \n\t\t\t\t</div>\n\t\t\t\t<input type=\"text\" class=\"form-control\" name=\"firstName\" id=\"firstName\" placeholder=\"First Name\" required=\"required\" [(ngModel)]=\"firstName\" >\n\t\t\t</div>\n\t\t\t<p class=\"alert alert-warning mt-2\" *ngIf=\"invalidFirstName\">First Name is required</p>\n        </div>\n        \n        <div class=\"form-group\">\n\t\t\t<div class=\"input-group\">\n\t\t\t\t<div class=\"input-group-prepend\">\n\t\t\t\t\t<span class=\"input-group-text\">\n\t\t\t\t\t\t<span class=\"fa fa-user\"></span>\n\t\t\t\t\t</span>                    \n\t\t\t\t</div>\n\t\t\t\t<input type=\"text\" class=\"form-control\" name=\"lastName\" placeholder=\"Last Name\" required=\"required\" [(ngModel)]=\"lastName\">\n\t\t\t</div>\n\t\t\t<p class=\"alert alert-warning mt-2\" *ngIf=\"invalidLasttName\">Last Name is required</p>\n        </div>\n\n          \n\t\t\n\t\t\t<button type=\"button\" class=\"btn btn-primary btn-md m-4 float-right d-block\" id=\"next\" (click)=\"handlePersonalDetailsValidation()\"\n\t\t\t>Next</button>\n        \n       \n        <div class=\"form-group\">\n\t\t\t<label class=\"form-check-label\"></label>\n\t\t</div>\n","import { Component, OnInit } from '@angular/core';\nimport {FormsModule,FormGroup,FormControl,FormBuilder} from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { UserServicesService } from 'src/app/service/user-services.service';\n\nexport class User {\n  constructor( private fullname:String,\n    private  surname:String,\n    private  mailid:String,\n    private  phonenumber:number,\n    private  address:String,\n    private  password:String,\n    private PrimaryAccount:any,\n    private SavingAccount:any){\n\n    }\n \n}\n\n\n@Component({\n  selector: 'app-user-registration',\n  templateUrl: './user-registration.component.html',\n  styleUrls: ['./user-registration.component.css']\n  \n})\nexport class UserRegistrationComponent implements OnInit {\n\n  constructor(private router:Router,private formbuilder:FormBuilder,private service:UserServicesService) { }\n  userName:string=\"\";\n  password:string=\"\";\n  confirmPassword:String=\"\";\n  invalidUserName = false;\n  invalidPassword = false;\n  invalidConfirmPassword  = false;\n  checked:false;\n  invalidTnc;\n\n    \n  ngOnInit(): void {\n  }\n  validateUserDetails(){\n\n    if(this.userName.length===0){\n      this.invalidUserName = true;\n      return;\n    }\n\n    if(this.password.length<8){\n      this.invalidPassword = true;\n      return;\n    }\n    if(!this.checkPassword(this.password)){\n      this.invalidPassword = true;\n     }\n    if(this.confirmPassword.length<8 ||this.confirmPassword!==this.password){\n      this.invalidConfirmPassword = true;\n      return;\n    }\n    if(!this.checked){\n      this.invalidTnc = true;\n      return;\n    }\n  \n    else{\n      sessionStorage.setItem(\"password\",this.password);\n      console.log(\"Done\");\n      this.service.addUSerToDb().subscribe( \n        response => {\n          if(response){\n            sessionStorage.removeItem(\"firstName\");\n            sessionStorage.removeItem(\"lastName\");\n            sessionStorage.removeItem(\"address\");\n            sessionStorage.removeItem(\"mailid\");\n            sessionStorage.removeItem(\"phonenumber\");\n            this.router.navigate([\"login\"]);\n          }\n        },\n        error => {\n          console.log(error);\n          alert(\"Registration Failed\");\n        }\n\n      );\n\n    }\n  }\n  \n  checkPassword(password){\n    let letter = /[a-zA-Z]/; \n    let number = /[0-9]/;\n    let symbol = /[,_#@]*$/\n    let valid = number.test(password) && letter.test(password); //match a letter _and_ a number\n    return valid;\n  }\n\n}\n","<div class=\"signup-form\">\n    <form >\n\t\t<h2>Sign Up</h2>\n\t\t<p>Please fill in this form to create an account!</p>\n        <hr>\n        <router-outlet>\n<div class=\"form-group\">\n    <div class=\"input-group\">\n        <div class=\"input-group-prepend\">\n            <span class=\"input-group-text\">\n                <span class=\"fa fa-user\"></span>\n            </span>                    \n        </div>\n        <input type=\"text\" [(ngModel)]=\"userName\" class=\"form-control\" name=\"userName\" id=\"userName\" placeholder=\"User Name\" required=\"required\" >\n    </div>\n    <p class=\"alert alert-warning mt-2\" *ngIf=\"invalidUserName\">User Name is required</p>\n\n</div>\n\n<div class=\"form-group\">\n    <div class=\"input-group\">\n        <div class=\"input-group-prepend\">\n            <span class=\"input-group-text\">\n                <i class=\"fa fa-lock\"></i>\n            </span>                    \n        </div>\n        <input type=\"password\" class=\"form-control\" [(ngModel)]=\"password\" name=\"password\" placeholder=\"Password (min 8 characters)\" required=\"required\" >\n    </div>\n    <p class=\"alert alert-warning mt-2\" *ngIf=\"invalidPassword\">Password is invalid \n        It must be minimum 8 digits and should contain alteast one letter,number or special symbol\n    </p>\n\n</div>\n<div class=\"form-group\">\n    <div class=\"input-group\">\n        <div class=\"input-group-prepend\">\n            <span class=\"input-group-text\">\n                <i class=\"fa fa-lock\"></i>\n                \n            </span>                    \n        </div>\n        <input type=\"password\" class=\"form-control\" [(ngModel)]=\"confirmPassword\" name=\"confirm_password\" placeholder=\"Confirm Password\" required=\"required\" >\n    </div>\n    <p class=\"alert alert-warning mt-2\" *ngIf=\"invalidConfirmPassword\">Confirm password is invalid</p>\n\n</div>\n  \n<div class=\"form-group\">\n    <label class=\"form-check-label\"><input type=\"checkbox\" [(ngModel)]=\"checked\" name=\"tnc\" required=\"required\" > I accept the <a href=\"#\">Terms of Use</a> &amp; <a href=\"#\">Privacy Policy</a></label>\n</div>\n<p class=\"alert alert-warning mt-2\" name=\"tnc\" *ngIf=\"invalidTnc\">Please accept terms and conditions</p>\n\n<div class=\"form-group\">\n    <button type=\"button\" id=\"signUpButton\" class=\"btn btn-primary btn-md\" (click)=\"validateUserDetails()\">Sign Up</button>\n</div>\n\n\n</router-outlet>\n</form>\n<div class=\"text-center \">Already have an account? <a href=\"#\" class=\"text-white\" routerLink=\"/login\">Login here</a></div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-saving-account',\n  templateUrl: './saving-account.component.html',\n  styleUrls: ['./saving-account.component.css']\n})\nexport class SavingAccountComponent implements OnInit {\n\n  constructor() { }\n  acocuntNumber = sessionStorage.getItem(\"savingAccountNumber\");\n  balance=sessionStorage.getItem(\"savingAccountBalance\");\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"card account\">\n    <div class=\"card-header\">\n        <h5 class=\"card-title\">Saving Account Details</h5>\n    </div>\n    <div class=\"card-body\">\n        <h5 class=\"card-title\">Saving Account Number: {{acocuntNumber}}</h5>\n        <h5 class=\"card-title\">Account Balance: {{balance}} Rs</h5>\n        \n    </div>\n  </div>\n","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\nimport { UserServicesService } from './user-services.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RouteGuardService  implements CanActivate{\n\n  constructor(private service:UserServicesService,\n    private router:Router) { }\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot){\n    if(this.service.isUserLogin()){\n      return true;\n    }\n    else{\n      this.router.navigate([\"login\"]);\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient,HttpParams,HttpHeaders} from '@angular/common/http';\n\nimport { User } from '../registration/subComponents/user-registration/user-registration.component';\nimport {Transaction} from '../transfer-funds/transfer-funds.component';\nimport { Deposit } from '../deposit-funds/deposit-funds.component';\nimport { ChequeBook } from '../chequebook-request/chequebook-request.component';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserServicesService {\n\n  constructor(private http:HttpClient) { }\n  \n\n  addUSerToDb(){\n    \n    console.log(\"Calling backend end point\");\n    //this.http.post(\"http://localhost:8090/register\",user);\n    //return this.http.get(\"http://localhost:8090/hello\",{responseType: 'text'})\n    return this.http.post(\"http://localhost:8090/register\",\n    new User(sessionStorage.getItem(\"firstName\"),sessionStorage.getItem(\"lastName\"),sessionStorage.getItem(\"mailid\"),Number(sessionStorage.getItem(\"phonenumber\")),sessionStorage.getItem(\"address\"),sessionStorage.getItem(\"password\"),null,null));\n    \n  }\n\n  authenticateUser(user:User){\n      console.log(\"Verifying user\");\n      return this.http.post(\"http://localhost:8090/login\",user);\n  }\n  isUserLogin(){\n    let user = sessionStorage.getItem(\"isAuthenticatedUser\");\n    return !(user===null);\n  }\n\n  getUserName(){\n    return (sessionStorage.getItem(\"isAuthenticatedUser\"));\n  }\n\n  transferFund(obj:Transaction){\n    return this.http.post(\"http://localhost:8090/transfer\",obj);\n  }\n\n  getAccountBalance(accountId){\n    return this.http.get(`http://localhost:8090//accounts/${accountId}/balance`)\n  }\n\n  depositMoney( accType:String, accNo:number, amount:number){\n  \n  \n\n    return this.http.post(`http://localhost:8090/deposit/${accType}/${accNo}/${amount}`,null);\n  }\n\n  requestChequeBook(chequeObj:ChequeBook,userObj:User){\n    let objs = {\n      \"chequebook\":chequeObj,\n      \"user\":userObj\n    }\n    return this.http.post(\"http://localhost:8090//createcheque\",chequeObj);\n  }\n\n  withdrawMoney(accType:String, accNo:number, amount:number){\n    return this.http.post(`http://localhost:8090/withdraw/${accType}/${accNo}/${amount}`,null);\n  }\n\n  getTransactions(accountId){\n    console.log(accountId);\n    return this.http.get(`http://localhost:8090//accounts/${accountId}/transactions`)\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport {FormBuilder,FormControl,FormGroup,Validators}  from '@angular/forms';\nimport { UserServicesService } from '../service/user-services.service';\n\nexport class Transaction{\n  constructor(\n\n\n  private  description:string,\n\n  private  transactionAmount:number,\n\n  private  sourceAccountnumber:number,\n\n  private  destinationAccountnumber:number,\n  \n  private  IFSC:string,\n  ){\n\n  }\n}\n\n@Component({\n  selector: 'app-transfer-funds',\n  templateUrl: './transfer-funds.component.html',\n  styleUrls: ['./transfer-funds.component.css']\n})\nexport class TransferFundsComponent implements OnInit {\n\n  constructor(private route:Router,private formBuilder:FormBuilder,private service:UserServicesService) { }\n  account:String=history.state.data;\n  balanceFund:number\n  transferFundForm: FormGroup;\n  submitted:boolean = false;\n  ngOnInit(): void {\n    this.transferFundForm = this.formBuilder.group({\n      accountType: [\"Primary Account\"],\n      balance : [this.balanceFund],\n      beneficiaryName : [\"\",Validators.required],\n      beneficiaryAccountNumber : [\"\",Validators.required],\n      beneficiaryIFSCCode : [\"\",Validators.required],\n      amountToBeTransfered : [\"\",[Validators.required]],\n      transferType : [\"IMPS\"],\n      optionalMessage : [\"\"]\n    })\n    this.getBalance();\n  }\n\n  get f(){\n    return this.transferFundForm.controls;\n  }\n\n  getBalance( ){\n   \n     (this.service.getAccountBalance(sessionStorage.getItem(\"primaryAccountNumber\"))).subscribe(\n        response => {\n          this.balanceFund = Number(response);\n        }\n     );\n  }\n\n  handleTransferFund(){\n    this.submitted = true;\n    if(this.transferFundForm.invalid){\n      console.log(\"Invalid\")\n    }\n    else{\n      let description = this.transferFundForm.get(\"optionalMessage\").value?this.transferFundForm.get(\"optionalMessage\").value:\"Fund Transfer\"\n      let newTransaction = new Transaction(description,\n      Number(this.transferFundForm.get(\"amountToBeTransfered\").value),\n      Number(sessionStorage.getItem(\"primaryAccountNumber\")),\n      Number(this.transferFundForm.get(\"beneficiaryAccountNumber\").value),\"ICN0001\");\n      console.log(newTransaction);\n      this.service.transferFund(newTransaction).subscribe(\n        response => alert(\"Transaction Successfull\"),\n        error => alert(\"Transaction failed\")\n      );\n    } \n  }\n\n  public onChange(event): void {  // event will give you full breif of action\n    const newVal = event.target.value;\n   // this.balanceFund = this.getBalance(newVal);\n   // console.log(newVal);\n  }\n\n}\n","<div class=\"jumbotron bg-light text-dark p-10\">\n    <form [formGroup]=\"transferFundForm\"> \n    <div class=\"form-group\">\n      <label for=\"accountType\">Account Type</label>\n      <select class=\"form-control\" id=\"accountType\" name=\"accountType\" formControlName=\"accountType\" (change)=\"onChange($event)\">\n        <option>Primary Account</option>\n      </select>\n    </div>\n    <div class=\"form-group\">\n        <label for=\"accountBalance\">Balance</label>\n        <input type=\"text\" class=\"form-control\" readonly id=\"accountBalance\" placeholder formControlName=\"balance\" value=\"{{balanceFund}}\">\n      </div>\n    <div class=\"form-group\">\n        <label for=\"beneficiaryName\">Beneficiary Name</label>\n        <input type=\"text\" class=\"form-control\"  id=\"beneficiaryName\" fromControlName=\"beneficiaryName\"   required=\"required\" formControlName=\"beneficiaryName\" [ngClass]=\"{ 'is-invalid': submitted && f.beneficiaryName.errors }\" >\n        <div *ngIf=\"f.beneficiaryName.errors\" class=\"invalid-feedback\">\n            <div *ngIf=\"f.beneficiaryName.errors.required\">    <p class=\"alert alert-warning mt-2\" >Beneficiary Name is required</p>  </div>\n    </div>\n        \n\n      </div>\n      <div class=\"form-group\">\n        <label for=\"beneficiaryAccountNumber\">Beneficiary's Account Number</label>\n        <input type=\"text\" class=\"form-control\"  id=\"beneficiaryAccountNumber\" formControlName=\"beneficiaryAccountNumber\" \n        [ngClass] = \"{'is-invalid':submitted && f.beneficiaryAccountNumber.errors}\" >\n        <div *ngIf=\"f.beneficiaryAccountNumber.errors\" class=\"invalid-feedback\">\n            <div *ngIf=\"f.beneficiaryAccountNumber.errors.required\">\n                <p class=\"alert alert-warning mt-2\">Beneficiary's Account Number is required!!</p> \n            </div>\n        </div>\n      </div>\n      <div class=\"form-group\">\n        <label for=\"beneficiaryIFSCCode\">Beneficiary IFSC Code</label>\n        <input type=\"text\" class=\"form-control\"  id=\"beneficiaryIFSCCode\" formControlName=\"beneficiaryIFSCCode\"\n        [ngClass]= \"{'is-invalid':submitted && f.beneficiaryIFSCCode.errors}\">\n        <div *ngIf=\"f.beneficiaryIFSCCode.errors\" class=\"invalid-feedback\">\n            <div *ngIf=\"f.beneficiaryIFSCCode.errors.required\">\n               <p class=\"alert alert-warning  mt-2\">Beneficiary's IFSC code is required!!</p>\n             </div>\n        </div>\n      </div>\n      <div class=\"form-group\">\n        <label for=\"amountToBeTransfered\">Amount to be transferred</label>\n        <input type=\"number\" class=\"form-control\"  id=\"amountToBeTransfered\" formControlName=\"amountToBeTransfered\" \n        [ngClass]=\"{'is-invalid':submitted && f.amountToBeTransfered.errors}\">\n        <div *ngIf=\"f.amountToBeTransfered.errors\" class=\"invalid-feedback\">\n            <div *ngIf=\"f.amountToBeTransfered.errors.required\">\n                <p class=\"alert alert-warning mt-2\">Amount is required</p>\n            </div>\n        </div>\n      </div>\n      <div class=\"form-group\">\n        <label for=\"transferType\">Transfer Type</label>\n        <select class=\"form-control\" id=\"accountType\" name=\"transferType\" formControlName=\"transferType\">\n          <option>IMPS</option>\n          <option>NEFT</option>\n          <option>RTGS</option>\n        </select>\n      </div>\n    <div class=\"form-group\">\n      <label for=\"Description\">Optional Message</label>\n      <textarea class=\"form-control\" id=\"description\" rows=\"1\" formControlName=\"optionalMessage\"></textarea>\n    </div>\n    <button type=\"button\" class=\"btn btn-primary\" id=\"tranferFundButton\" (click)=\"handleTransferFund()\">Transfer Funds</button>\n  </form>\n</div>\n\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { UserServicesService } from '../service/user-services.service';\n\n@Component({\n  selector: 'app-user-home',\n  templateUrl: './user-home.component.html',\n  styleUrls: ['./user-home.component.css']\n})\nexport class UserHomeComponent implements OnInit {\n\n  constructor(private router:Router,private service:UserServicesService) { }\n  primaryAccountBalance;\n  savingAccountBalance;\n  ngOnInit(): void {\n    \n    this.savingAccountBalance = sessionStorage.getItem(\"savingAccountBalance\")\n    this.service.getAccountBalance(Number(sessionStorage.getItem(\"primaryAccountNumber\"))).subscribe(\n      response => {\n        this.primaryAccountBalance = response;\n        sessionStorage.setItem(\"primaryAccountBalance\",this.primaryAccountBalance)\n      },\n      error =>{\n        console.log(error);\n      }\n    )\n    this.service.getAccountBalance(Number(sessionStorage.getItem(\"savingAccountNumber\"))).subscribe(\n      response => {\n        this.savingAccountBalance = response;\n        sessionStorage.setItem(\"savingAccountBalance\",this.savingAccountBalance)\n      },\n      error =>{\n        console.log(error);\n      }\n    )\n  }\n  \n\n  handleDeposit(account){\n    this.router.navigate([\"user\",\"depositFund\"]);\n\n  }\n  handleWithdraw(account){\n    this.router.navigate([\"user\",\"withdrawFund\"]);\n\n  }\n  handleAccount(account){\n    if(account===\"Primary\"){\n      this.router.navigate([\"user\",\"primaryAccount\"]);\n    }\n  }\n  handlePrimaryAccount(){\n    this.router.navigate([\"user\",\"primaryAccount\"])\n  }\n\n  handleSavingAccount(){\n    this.router.navigate([\"user\",\"savingAccount\"])\n  }\n\n}\n","<div class=\"container\">\n    <div class=\"row\">\n        <div class=\"col-sm\">\n            <div class=\"account-container\">\n                \n                        <div class=\"top-section\">\n                            <div class=\"balance float-right\">\n                                {{primaryAccountBalance}} Rs\n                            </div>\n                            <div class=\"account type\">\n                                Primary\n                            </div>\n                        </div>\n                        <hr class=\"solid\">\n                        <div class=\"bottom-section\" id=\"viewPrimaryAccountDetails\" (click)=\"handlePrimaryAccount()\">\n                            <div class=\"details float-right\">\n                                <i class=\"fa fa-arrow-right\" aria-hidden=\"true\"></i>\n                            </div>\n                            <div>\n                                View Details\n                            </div>\n                        </div>\n                       \n                \n              </div>\n                <br>\n                <div class=\"account-container\">\n                \n                    <div class=\"top-section\">\n                        <div class=\"balance float-right\">\n                            {{savingAccountBalance}} Rs\n                        </div>\n                        <div class=\"account type\">\n                            Saving Account\n                        </div>\n                    </div>\n                    <hr class=\"solid\">\n                    <div class=\"bottom-section\" id=\"viewSavingAccountDetails\" (click)=\"handleSavingAccount()\" >\n                        <div class=\"details float-right\">\n                            <i class=\"fa fa-arrow-right\" aria-hidden=\"true\"></i>\n                        </div>\n                        <div>\n                            View Details\n                        </div>\n                    </div>\n                   \n            \n          </div>\n        </div>\n        <br>\n        <div class=\"col-sm\">\n            <div class=\"row\">\n                <div class=\"col-sm\">\n                  <div class=\"transaction\">\n                        <div class=\"top-section\">\n                            <span class=\"float-right\">Deposit</span>\n                            <i class=\"fa fa-credit-card\" aria-hidden=\"true\"></i>\n\n                        </div>\n                        <hr>\n                        <div class=\"bottom-section\" (click)=\"handleDeposit('Primary Account')\" id=\"depositFundSection\">\n                            <div class=\"details float-right\">\n                                <i class=\"fa fa-arrow-right\" aria-hidden=\"true\" ></i>\n                            </div>\n                            <div>\n                                Go to deposits\n                            </div>\n                        </div>\n                </div>\n                </div>\n                <div class=\"col-sm\">\n                    <div class=\"row\">\n                        <div class=\"col-sm\">\n                          <div class=\"transaction\">\n                                <div class=\"top-section\">\n                                    <span class=\"float-right\">Withdrawal</span>\n                                    <i class=\"fa fa-money\" aria-hidden=\"true\"></i>\n\n        \n                                </div>\n                                <hr>\n                                <div class=\"bottom-section\"(click)=\"handleWithdraw('Primary Account')\" id=\"withdrawFudSection\" >\n                                    <div class=\"details float-right\">\n                                        <i class=\"fa fa-arrow-right\" aria-hidden=\"true\" ></i>\n                                    </div>\n                                    <div>\n                                        Go to Withdrawal\n                                    </div>\n                                </div>\n                        </div>\n                        </div>\n                </div>\n        </div>\n             \n              \n                            \n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { LoginComponent } from '../login/login.component';\nimport { UserServicesService } from '../service/user-services.service';\n\n@Component({\n  selector: 'app-user-profile',\n  templateUrl: './user-profile.component.html',\n  styleUrls: ['./user-profile.component.css']\n})\nexport class UserProfileComponent implements OnInit {\n\n  constructor(private service:UserServicesService) { }\n  savingAccountNumber;\n  savingAccountBalance;\n  primaryAccountNumber;\n  primaryAccountBalance;\n  userName = this.service.getUserName();\n  firstname = sessionStorage.getItem(\"firstname\");\n  lastname = sessionStorage.getItem(\"lastname\");\n  phonenumber = sessionStorage.getItem(\"phonenumber\");\n  email = sessionStorage.getItem(\"mailid\");\n  address = sessionStorage.getItem(\"address\");\n  ngOnInit(): void {\n    this.savingAccountNumber = sessionStorage.getItem(\"savingAccountNumber\");\n    this.savingAccountBalance = sessionStorage.getItem(\"savingAccountBalance\");\n    this.primaryAccountBalance = sessionStorage.getItem(\"primaryAccountBalance\");\n    this.primaryAccountNumber = sessionStorage.getItem(\"primaryAccountNumber\");\n  }\n\n}\n","<div class=\"container\">\n    <div class=\"row\">\n      <div class=\"col-md\">\n      <div class=\"row\">\n        <div class=\"card account profile\">\n            <div class=\"card-header\">\n                <img src=\"https://image.flaticon.com/icons/svg/151/151782.svg\"  class=\"profile-pic\" alt=\"User photo\">\n                <br>\n                <span class=\"user\">{{userName}}'s profile</span>\n            </div>\n            <div class=\"card-body\">\n              <p class=\"card-text\">First Name: {{firstname}} </p>\n              <p class=\"card-text\">Last Name:  {{lastname}} </p>\n              <p class=\"card-text\">Mobile Number: {{phonenumber}}</p>\n              <p class=\"card-text\">Email id: {{email}}</p>\n              <p class=\"card-text\">Address : {{address}}</p>\n            </div>\n          </div>\n    </div>\n      </div>\n      <div class=\"col-md\">\n            <div class=\"row\">\n                <div class=\"card account\">\n                    <div class=\"card-header\">\n                        <h5 class=\"card-title\">Primary Account</h5>\n                    </div>\n                    <div class=\"card-body\">\n                      <p class=\"card-text\">Account Number: {{primaryAccountNumber}}</p>\n                      <p class=\"card-text\">Account Balance: {{primaryAccountBalance}} Rs</p>\n                    </div>\n                  </div>\n            </div>\n        <div class=\"row\">\n            <div class=\"card account\">\n                <div class=\"card-header\">\n                    <h5 class=\"card-title\">Saving Account</h5>\n                </div>\n                <div class=\"card-body\">\n                  <p class=\"card-text\">Account Number: {{savingAccountNumber}}</p>\n                  <p class=\"card-text\">Account Balance: {{savingAccountBalance}} Rs</p>\n                </div>\n              </div>\n        </div>\n      </div>\n    </div>\n  </div>","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { UserServicesService } from '../service/user-services.service';\n\n@Component({\n  selector: 'app-withdraw-fund',\n  templateUrl: './withdraw-fund.component.html',\n  styleUrls: ['./withdraw-fund.component.css']\n})\nexport class WithdrawFundComponent implements OnInit {\n \n  constructor(private route:Router,private formBuilder:FormBuilder,private service:UserServicesService) { }\n  account:String;\n  balanceFund:number;\n  withdrawFundForm: FormGroup;\n  submitted:boolean = false;\n  ngOnInit(): void {\n    this.withdrawFundForm = this.formBuilder.group({\n      accountType: [\"Primary Account\"],\n      balance : [this.balanceFund],\n      amountToBeDeposited : [\"\",Validators.required]\n\n    })\n    this.getBalanceAsPerAccountType(this.withdrawFundForm.get(\"accountType\").value);\n  }\n\n  getBalanceAsPerAccountType(accountType){\n    if(accountType===\"Primary Account\")\n      this.getBalance(sessionStorage.getItem(\"primaryAccountNumber\"));\n    else\n      this.balanceFund = Number(sessionStorage.getItem(\"savingAccountBalance\"))\n  }\n\n  get f(){\n    return this.withdrawFundForm.controls;\n  }\n\n  getBalance(account){\n    this.service.getAccountBalance(Number(account)).subscribe(\n      response => {\n        this.balanceFund = Number(response);\n      },\n      error =>{\n        console.log(error);\n      }\n    )\n  }\n\n  handleTransferFund(){\n    this.submitted = true;\n    if(this.withdrawFundForm.invalid){\n      console.log(\"Invalid\")\n    }\n    else{\n    if(this.withdrawFundForm.get(\"accountType\").value === \"Primary Account\"){\n    this.service.withdrawMoney(\"Primary\",Number(sessionStorage.getItem(\"primaryAccountNumber\")),Number(this.withdrawFundForm.get(\"amountToBeDeposited\").value)).subscribe(\n      response =>{ \n        console.log(response)\n        alert(\"Money Withdrawn successfully!!\")\n        this.route.navigate([\"user\",\"home\"]);\n        },\n      error => {\n        alert(\"Transaction Failed\")\n        console.log(error)\n      }\n    )\n    }\n    else{\n      this.service.withdrawMoney(\"Savings\",Number(sessionStorage.getItem(\"savingAccountNumber\")),Number(this.withdrawFundForm.get(\"amountToBeDeposited\").value)).subscribe(\n        response =>{ \n          let updatedBalance \n          console.log(response)\n          if(this.withdrawFundForm.get(\"amountToBeDeposited\").value>Number(sessionStorage.getItem(\"savingAccountBalance\")))\n          {\n          updatedBalance = Number(this.withdrawFundForm.get(\"amountToBeDeposited\").value) - Number(sessionStorage.getItem(\"savingAccountBalance\"))\n          sessionStorage.setItem(\"savingAccountBalance\",String(updatedBalance));\n          }\n          alert(\"Money Withdrawn successfully!!\")\n          this.route.navigate([\"user\",\"home\"]);\n          },\n        error => {\n          alert(\"Transaction Failed\")\n          console.log(error)\n        }\n      )\n    }\n  }\n}\n\n  public onChange(event): void {  // event will give you full breif of action\n    const newVal = event.target.value;\n    this.getBalanceAsPerAccountType(newVal);\n   // console.log(newVal);\n  }\n\n\n}\n","<div class=\"jumbotron bg-light text-dark p-10\">\n    <form [formGroup]=\"withdrawFundForm\"> \n    <div class=\"form-group\">\n      <label for=\"accountType\">Please select your account type</label>\n      <select class=\"form-control\" id=\"accountType\" name=\"accountType\" formControlName=\"accountType\" (change)=\"onChange($event)\">\n        <option>Primary Account</option>\n        <option>Saving Account</option>\n      </select>\n    </div>\n    <div class=\"form-group\">\n        <label for=\"accountBalance\">Balance</label>\n        <input type=\"text\" class=\"form-control\" readonly id=\"accountBalance\" placeholder formControlName=\"balance\" value=\"{{balanceFund}}\">\n    </div>\n      <div class=\"form-group\">\n        <label for=\"amountToBeDeposited\">Amount to be withdrawn</label>\n        <input type=\"number\" class=\"form-control\"  id=\"amountToWithdrawn\" formControlName=\"amountToBeDeposited\" \n        [ngClass]=\"{'is-invalid':submitted && f.amountToBeDeposited.errors}\">\n        <div *ngIf=\"f.amountToBeDeposited.errors\" class=\"invalid-feedback\">\n            <div *ngIf=\"f.amountToBeDeposited.errors.required\">\n                <p class=\"alert alert-warning mt-2\">Amount is required</p>\n            </div>\n        </div>\n      </div>\n    \n    <button type=\"button\" class=\"btn btn-primary\" (click)=\"handleTransferFund()\" id=\"withdrawMoneyButton\">Withdraw Money</button>\n  </form>\n</div>\n\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}